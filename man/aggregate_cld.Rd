% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_cld.R
\name{aggregate_cld}
\alias{aggregate_cld}
\title{Aggregate a causal loop diagram}
\usage{
aggregate_cld(cld_concepts, cld_el, agg_method = c("dist", "w_sum"),
  type_col, id_col, agg_target_type, types_to_use_in_agg = NULL,
  order_to_consider, max_path_length)
}
\arguments{
\item{cld_concepts}{A data frame with the concepts occuring in the causal loop diagram,
including at least a column naming the concepts and one column specifiying type of concept
(even if all concepts are of the same type)}

\item{cld_el}{A data frame with a column named "sender" and a column named "receiver" storing information of
links between concepts}

\item{agg_method}{Choose an aggregation method. At the moment the inverse shortest distance ("dist") between concepts and
the weighted sum of paths ("w_sum") are available. The weighted sum of paths adds all inverse path lengthts between paths.}

\item{type_col}{Character string specifying name of column where concept type is stored in cld_concepts}

\item{id_col}{Character string specifying name of column where concept names are stored in cld_concepts.
These must match with how concepts are called in cld_el}

\item{agg_target_type}{Character vector specifying the type(s) of concept(s) that are the target of the aggregation procedure}

\item{types_to_use_in_agg}{Character vector, specifying wether the aggregation should only be based on a subset of all
types of concepts. aggregate_cld then subsets the diagram before computation
(a method preserving the diagram and not counting some paths might be implemented later)}

\item{order_to_consider}{Integer setting the order of the neighborhood to consider in aggregation}

\item{max_path_length}{Integer setting the maximum path length to consider in aggregation}
}
\description{
Aggregate a causal loop diagram
}
